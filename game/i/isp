local lib = {}
local RS = game:GetService("ReplicatedStorage")
local UIS = game:GetService("UserInputService")
local Players = game:GetService("Players")
local plr = Players.LocalPlayer

local defaultKeys = {"Z","X","C","V"}
local categories = {"Gun","Melee","Powers","Sword"}

local function getChild(parent, name)
	if string.find(name, "%s") then
		return parent:FindFirstChild(name)
	else
		return parent[name] or parent:FindFirstChild(name)
	end
end

function lib.WaitForLoaded()
	RS:WaitForChild("Events")
	local anims = RS:WaitForChild("Animations")
	anims:WaitForChild("Fighting")
	for _, cat in ipairs(categories) do
		RS.Events:WaitForChild(cat)
		RS.Animations.Fighting:WaitForChild(cat)
	end
end

function lib.ListItems()
	lib.WaitForLoaded()
	local ev = RS.Events
	for _, cat in ipairs(categories) do
		local folder = ev:FindFirstChild(cat)
		if folder then
			local items = {}
			for _, item in ipairs(folder:GetChildren()) do
				table.insert(items, item.Name)
			end
			print(cat..": "..table.concat(items, ", "))
		end
	end
end

function lib.GetToolList()
	lib.WaitForLoaded()
	local ev = RS.Events
	local list = {}
	for _, cat in ipairs(categories) do
		local folder = ev:FindFirstChild(cat)
		if folder then
			for _, item in ipairs(folder:GetChildren()) do
				table.insert(list, cat.." - "..item.Name)
			end
		end
	end
	return list
end

function lib.WatchToolList(callback)
	spawn(function()
		while true do
			local list = lib.GetToolList()
			callback(list)
			wait(1)
		end
	end)
end

function lib.CreateTool(itemName, cat)
	lib.WaitForLoaded()
	local evCat = RS.Events:FindFirstChild(cat)
	if not evCat then error("Không tìm thấy Events."..cat) end
	local remote = getChild(evCat, itemName)
	if not remote then error("Không tìm thấy "..itemName.." trong "..cat) end

	local order = defaultKeys
	local keysAllowed = {}
	local animsFighting = RS.Animations:WaitForChild("Fighting")
	local animCat = animsFighting:FindFirstChild(cat)
	local animItem = animCat and getChild(animCat, itemName)
	if animItem then
		for _, k in ipairs(order) do
			if animItem:FindFirstChild(k) then
				table.insert(keysAllowed, k)
			end
		end
	end
	if #keysAllowed == 0 then
		keysAllowed = defaultKeys
	end

	local tool = Instance.new("Tool")
	tool.Name = itemName
	tool.RequiresHandle = false
	tool.CanBeDropped = false

	local sg = Instance.new("ScreenGui")
	sg.Name = "MobileControlGui"
	sg.ResetOnSpawn = false
	sg.Enabled = false
	sg.Parent = tool

	local frame = Instance.new("Frame")
	frame.Name = "ControlFrame"
	frame.Size = UDim2.new(0,80,0,230)
	frame.Position = UDim2.new(1,-90,0.5,-115)
	frame.BackgroundColor3 = Color3.fromRGB(25,25,25)
	frame.BackgroundTransparency = 0.5
	frame.Parent = sg

	local uiC = Instance.new("UICorner")
	uiC.CornerRadius = UDim.new(0,20)
	uiC.Parent = frame

	local listL = Instance.new("UIListLayout")
	listL.Padding = UDim.new(0,10)
	listL.FillDirection = Enum.FillDirection.Vertical
	listL.HorizontalAlignment = Enum.HorizontalAlignment.Center
	listL.VerticalAlignment = Enum.VerticalAlignment.Center
	listL.Parent = frame

	for i, k in ipairs(keysAllowed) do
		local btn = Instance.new("TextButton")
		btn.Name = "Button_"..k
		btn.Text = k
		btn.Size = UDim2.new(0,50,0,50)
		btn.BackgroundColor3 = Color3.fromRGB(45,45,45)
		btn.TextColor3 = Color3.new(1,1,1)
		btn.Font = Enum.Font.SourceSansBold
		btn.TextSize = 18
		btn.LayoutOrder = i
		btn.Parent = frame

		local btnC = Instance.new("UICorner")
		btnC.CornerRadius = UDim.new(1,0)
		btnC.Parent = btn

		btn.MouseButton1Click:Connect(function()
			remote:FireServer(k)
		end)
	end

	local dragging, dragInput, dragStart, startPos
	local function update(input)
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end

	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then dragging = false end
			end)
		end
	end)

	frame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	local dragConn = UIS.InputChanged:Connect(function(input)
		if input == dragInput and dragging then update(input) end
	end)

	local keyMap = {}
	for _, k in ipairs(keysAllowed) do
		keyMap[Enum.KeyCode[k]] = k
	end

	local inpConn

	tool.Equipped:Connect(function()
		for _, gui in ipairs(plr.PlayerGui:GetChildren()) do
			if gui:IsA("ScreenGui") and gui.Name == "MobileControlGui" then
				gui.Enabled = false
			end
		end
		local gui = tool:FindFirstChild("MobileControlGui")
		if gui then
			gui.Parent = plr.PlayerGui
			gui.Enabled = true
		end
		inpConn = UIS.InputBegan:Connect(function(input, processed)
			if processed then return end
			local k = keyMap[input.KeyCode]
			if k then remote:FireServer(k) end
		end)
	end)

	tool.Unequipped:Connect(function()
		if inpConn then
			inpConn:Disconnect()
			inpConn = nil
		end
		if dragConn then
			dragConn:Disconnect()
			dragConn = nil
		end
		local gui = plr.PlayerGui:FindFirstChild("MobileControlGui")
		if gui then
			gui.Enabled = false
			gui.Parent = tool
		end
	end)

	tool.AncestryChanged:Connect(function(_, parent)
		if parent ~= plr.Backpack and (not plr.Character or parent ~= plr.Character) then
			wait(0.1)
			tool.Parent = plr.Backpack
		end
	end)

	tool.Parent = plr.Backpack
	return tool
end

return lib
